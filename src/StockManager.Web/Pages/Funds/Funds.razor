@page "/funds"
@using Radzen.Blazor
@using StockManager.Core.OutputModels;
@using StockManager.Core.Services;

@inject FundsService fundsService;
@inject IDialogService dialogService;

<PageTitle>元手管理</PageTitle>

<h1>元手管理</h1>

<MudButton @onclick="OpenRegisterDialog" Variant="Variant.Outlined" Color="Color.Info">
    株式売買登録
</MudButton>
<MudStack Row="true" Spacing="3">
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">元手</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@(this.Capital.ToString("#,0"))円</MudText>
        </MudCardContent>
    </MudCard>
</MudStack>

<RadzenChart>
    <RadzenLineSeries Smooth=false Data="@this.CapitalData" CategoryProperty="Date" Title="元手" ValueProperty="Capital">
        <RadzenMarkers MarkerType="MarkerType.Circle" />
        <RadzenCategoryAxis Formatter="@FormatAsDate"></RadzenCategoryAxis>
        <RadzenValueAxis Min="0" Step="1_000_000">
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="元手の推移"></RadzenAxisTitle>
        </RadzenValueAxis>
    </RadzenLineSeries>
</RadzenChart>

@code {
    int Capital = 100;
    IList<FundsTransition>? CapitalData;

    protected override async Task OnInitializedAsync()
    {
        this.Capital = await fundsService.GetCapitalAsync();
        this.CapitalData = await fundsService.FetchFundsTransitionsAsync();
    }


    private string FormatAsDate(object value)
        => ((DateTime)value).ToShortDateString();

    private async Task OpenRegisterDialog()
    {
        var options = new DialogOptions
            {
                CloseOnEscapeKey = true,
                FullWidth = true,
                MaxWidth = MaxWidth.Medium
            };

        var result = await dialogService.Show<FundsRegisterDialog>("元手登録", options).Result;
        if (result.Data is bool boolResult && boolResult)
        {
            this.Capital = await fundsService.GetCapitalAsync();
            this.CapitalData = await fundsService.FetchFundsTransitionsAsync();
        }
    }
}
