@page "/"
@using MudBlazor
@using StockManager.Core.OutputModels;
@using StockManager.Core.Services;
@using StockManager.Core.Utils;

@inject DashboardService dashboardService

<PageTitle>ダッシュボード</PageTitle>

<MudStack Class="mb-2" Row="true" AlignItems="AlignItems.Start" Spacing="3">
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">元手</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@(this.Capital.ToString("#,0"))円</MudText>
        </MudCardContent>
    </MudCard>
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">損益(トータル)</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@(this.ProfitAndLoss.Total.ToString("#,0"))円</MudText>
        </MudCardContent>
    </MudCard>
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">損益(直近30日)</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@(this.ProfitAndLoss.OneMonth.ToString("#,0"))円</MudText>
        </MudCardContent>
    </MudCard>
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">損益(直近180日)</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@(this.ProfitAndLoss.HalfYear.ToString("#,0"))円</MudText>
        </MudCardContent>
    </MudCard>
    <MudCard>
        <MudCardHeader>
            <MudText Typo="Typo.h5">損益(直近一年)</MudText>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@(this.ProfitAndLoss.OneYear.ToString("#,0"))円</MudText>
        </MudCardContent>
    </MudCard>
</MudStack>

<MudDataGrid Class="mb-2" @ref="HoldingStockDataGrid" T="HoldingStock" Items="@HoldingStock" Filterable="false" FilterMode="@DataGridFilterMode.ColumnFilterRow">
    <ToolBarContent>
        <MudText Typo="Typo.h4">保有株式</MudText>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x!.Code" Filterable="false" Title="銘柄コード" />
        <PropertyColumn Property="x => x!.Name" Title="銘柄名" />
        <PropertyColumn Property="x => x!.Quantity" Title="数" />
        <PropertyColumn Property="x => x!.Amount" Title="単価" />
        <PropertyColumn Property="x => GetNisaLabel(x!.IsNisa)" Title="預かり種別" />
        <PropertyColumn Property="x => x!.Date.ToShortDateString()" Title="購入日" />
    </Columns>
</MudDataGrid>

<MudDataGrid Class="mb-2" @ref="HistoryDataGrid" T="StockTransactionHistory" Items="@TransactionHistory"  Filterable="false" FilterMode="@DataGridFilterMode.ColumnFilterRow">
    <ToolBarContent>
        <MudText Typo="Typo.h4">過去30日の取引</MudText>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => x!.Code" Filterable="false" Title="銘柄コード" />
        <PropertyColumn Property="x => x!.Name" Title="銘柄名" />
        <PropertyColumn Property="x => x!.Quantity" Title="数" />
        <PropertyColumn Property="x => x!.Type == TransactionType.Buy ? Buy: Sell" Title="購入/売却" />
        <PropertyColumn Property="x => x!.Date.ToShortDateString()" Title="取引日" />
        <PropertyColumn Property="x => x!.Amount" Title="価格" />
        <PropertyColumn Property="x => GetNisaLabel(x!.IsNisa)" Title="預かり種別" />
        <PropertyColumn Property="x => x!.Commission" Title="手数料" />
        <PropertyColumn Property="x => x!.Memo" Title="メモ" />
    </Columns>
</MudDataGrid>

@code {
    private MudDataGrid<HoldingStock> HoldingStockDataGrid = null!;
    private MudDataGrid<StockTransactionHistory> HistoryDataGrid = null!;

    const string Buy = "購入";
    const string Sell = "売却";
    int Capital = 0;
    ProfitAndLoss ProfitAndLoss = new ProfitAndLoss();
    IEnumerable<HoldingStock>? HoldingStock;
    IEnumerable<StockTransactionHistory>? TransactionHistory;

    protected override async Task OnInitializedAsync()
    {
        this.Capital = await dashboardService.GetCapitalAsync().ConfigureAwait(false);
        this.ProfitAndLoss = await dashboardService.GetProfitAndLossAsync().ConfigureAwait(false);
        this.HoldingStock = await dashboardService.GetHoldingStockAsync().ConfigureAwait(false);
        this.TransactionHistory = await dashboardService.FetchTransactionHistoryAsync(TimeSpan.FromDays(30)).ConfigureAwait(false);

        await HoldingStockDataGrid.SetSortAsync("銘柄コード", SortDirection.Ascending, x => x.Code);
        await HistoryDataGrid.SetSortAsync("銘柄コード", SortDirection.Descending, x => x.Date);

    }

    private string GetNisaLabel(bool isNisa)
    {
        if (isNisa)
        {
            return "NISA預り";
        }
        else
        {
            return "一般預かり";
        }
    }
}