@page "/investmentTrustHistory"
@using StockManager.Core.OutputModels;
@using StockManager.Core.Services;
@using StockManager.Core.Utils;

@inject InvestmentTrustService service;

<PageTitle>投資信託取引履歴</PageTitle>

<MudDataGrid T="InvestmentTrustTransactionHistory" Items="@Histories" Filterable="false" FilterMode="@DataGridFilterMode.ColumnFilterRow">
    <ToolBarContent>
        <MudText Typo="Typo.h4">株式取引履歴</MudText>
    </ToolBarContent>
    <Columns>
        <PropertyColumn Property="x => GetTransactionType(x!.Type)" />
        <PropertyColumn Property="x => x!.Code" Filterable="false" Title="投資信託コード" />
        <PropertyColumn Property="x => x!.Name" Title="投資信託名" />
        <PropertyColumn Property="x => x!.Date" Title="日付" />
        <PropertyColumn Property="x => x!.Quantity" Title="取引口数" />
        <PropertyColumn Property="x => x!.Unit" Title="取引単位" />
        <PropertyColumn Property="x => GetNisaLabel(x!.IsNisa)" Title="預かり種別" />
        <PropertyColumn Property="x => x!.Amount" Title="取引単価/分配金" />
        <PropertyColumn Property="x => x!.Memo" Title="メモ" />
    </Columns>
</MudDataGrid>


@code {
    IList<InvestmentTrustTransactionHistory> Histories = new List<InvestmentTrustTransactionHistory>();

    protected override async Task OnInitializedAsync()
    {
        this.Histories = await service.FetchInvestmentTrustAsync();
    }

    private string GetNisaLabel(bool isNisa)
    {
        if (isNisa)
        {
            return "NISA預り";
        }
        else
        {
            return "一般預かり";
        }
    }

    private string GetTransactionType(TransactionType type)
    {
        if (type == TransactionType.Buy)
        {
            return "購入";
        }
        else if (type == TransactionType.Sell)
        {
            return "売却";
        }
        else
        {
            return "分配金";
        }
    }
}
